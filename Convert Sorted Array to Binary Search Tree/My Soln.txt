class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        return setMidThenSplitLeftRight(nums, 0, nums.length - 1);
    }
    
    public TreeNode setMidThenSplitLeftRight(int[] nums, int low, int high) { // low and high are index of nums
        if(high < low) {
            return null;
        }
        int mid = (high + low) / 2; // alternative to avoid int overflow: low + (high - low) / 2
        
        int midNum = nums[mid];
        TreeNode node = new TreeNode(midNum);
        node.left = setMidThenSplitLeftRight(nums, low, mid - 1);
        node.right = setMidThenSplitLeftRight(nums, mid + 1, high);
        return node;
    }
}