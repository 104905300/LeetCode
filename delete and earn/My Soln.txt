class Solution {
    public int deleteAndEarn(int[] nums) {
        Arrays.sort(nums);
        
        if (nums.length == 1) {
            return nums[0];
        }
        
        // list of int tuple, first index is num, second index is number of occurence
        List<int[]> list = new ArrayList<>(); 
        list.add(new int[]{nums[0], 1});
        
        for(int i = 1; i < nums.length; i++) {
            if(nums[i-1] == nums[i]) {
                list.get(list.size() - 1)[1]++;
            } else {
                list.add(new int[]{nums[i], 1});
            }
        }
        
        if (list.size() == 1) { // for cases like [1,1,1,1]
            return list.get(0)[0] * list.get(0)[1];
        }
        
        // we know if the list get here there is at least two number in it and they are differrent
        int prevTwo = list.get(0)[0] * list.get(0)[1];
        int prevOne;
        if (list.get(1)[0] - list.get(0)[0] == 1) {
            prevOne = Math.max(list.get(0)[0] * list.get(0)[1], list.get(1)[0] * list.get(1)[1]);
        } else {
            prevOne = list.get(0)[0] * list.get(0)[1] + list.get(1)[0] * list.get(1)[1];
        }
        
        for(int i = 2; i < list.size(); i++) {
            // current index becomes the new previous one, previous one becomes previous two
            int temp = prevOne;
            if (list.get(i)[0] - list.get(i - 1)[0] == 1) {
                prevOne = Math.max(prevOne, prevTwo + list.get(i)[0] * list.get(i)[1]);
            } else {
                prevOne = list.get(i)[0] * list.get(i)[1] + prevOne;
            }
            prevTwo = temp;
        }
        
        return prevOne;
    }
}